name: Publish

on:
  pull_request:
    branches: [ "publish" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
      
  dockerize:
    name: Dockerize
    needs: build
    runs-on: ubuntu-latest
    env:
      PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup .NET 8
        uses: actions/setup-dotnet@v3
      - name: Build Docker image
        run: docker build -t dotnetbro/inno-eco -f ./INNOEcoSystem.Api/Dockerfile .
      - name: Login to Docker account
        run: docker login -u dotnetbro -p $PASSWORD #--password-stdin
      - name: Push Docker image
        run: docker push dotnetbro/inno-eco

  deploy:
    name: Deploy
    needs: dockerize
    runs-on: ubuntu-latest

    steps:
      - name: SSH into AWS Ubuntu Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            cd ~/inno
            docker pull dotnetbro/inno-eco
            docker-compose up -d
            docker rmi $(docker images -f dangling=true -q)
